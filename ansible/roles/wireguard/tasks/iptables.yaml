# https://sudamtm.medium.com/iptables-a-comprehensive-guide-276b8604eff1
# https://www.digitalocean.com/community/tutorials/how-to-list-and-delete-iptables-firewall-rules
# https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands

- name: temporary accept input default policy
  ansible.builtin.iptables:
    chain: INPUT
    policy: ACCEPT

- name: flush filter
  ansible.builtin.iptables:
    table: filter
    flush: yes

- name: flush nat
  ansible.builtin.iptables:
    table: nat
    flush: yes

- name: flush mangle
  ansible.builtin.iptables:
    table: mangle
    flush: yes

- name: accept input related and established connections
  ansible.builtin.iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
    action: insert
    rule_num: 1

- name: drop input invalid connections
  ansible.builtin.iptables:
    chain: INPUT
    ctstate: INVALID
    jump: DROP
    action: insert
    rule_num: 2

- name: accept input loopback
  ansible.builtin.iptables:
    chain: INPUT
    in_interface: lo
    jump: ACCEPT
    action: insert
    rule_num: 3

- name: accept input ICMP on wg0
  ansible.builtin.iptables:
    chain: INPUT
    protocol: icmp
    in_interface: wg0
    jump: ACCEPT
    action: insert
    rule_num: 4

- name: accept input TCP port {{ ansible_port }} (SSH)
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ ansible_port }}"
    jump: ACCEPT
    action: insert
    rule_num: 5

- name: accept input UDP port {{ wireguard_port }} (WireGuard)
  ansible.builtin.iptables:
    chain: INPUT
    protocol: udp
    destination_port: "{{ wireguard_port }}"
    jump: ACCEPT
    action: insert
    rule_num: 6

- name: drop input default policy
  ansible.builtin.iptables:
    chain: INPUT
    policy: DROP

- name: accept forward related and established connections
  ansible.builtin.iptables:
    chain: FORWARD
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
    action: insert
    rule_num: 1

- name: drop forward invalid connections
  ansible.builtin.iptables:
    chain: FORWARD
    ctstate: INVALID
    jump: DROP
    action: insert
    rule_num: 2

- name: accept forward wg to eth0
  ansible.builtin.iptables:
    chain: FORWARD
    in_interface: wg0
    out_interface: eth0
    jump: ACCEPT
    action: insert
    rule_num: 3

- name: drop forward eth0
  ansible.builtin.iptables:
    chain: FORWARD
    out_interface: eth0
    jump: DROP
    action: insert
    rule_num: 4

- name: accept forward 10.20.8.1/24
  ansible.builtin.iptables:
    chain: FORWARD
    source: 10.20.8.1/24
    jump: ACCEPT
    action: insert
    rule_num: 5

- name: accept forward 10.20.30.1/24 to 10.0.30.1/24
  ansible.builtin.iptables:
    chain: FORWARD
    source: 10.20.30.1/24
    destination: 10.0.30.1/24
    jump: ACCEPT
    action: insert
    rule_num: 6

- name: accept forward 10.20.30.1/24 to 10.20.8.2/32 port 53 (DNS)
  ansible.builtin.iptables:
    chain: FORWARD
    source: 10.20.30.1/24
    destination: 10.20.8.2/32
    protocol: udp
    destination_port: 53
    jump: ACCEPT
    action: insert
    rule_num: 7

- name: accept output default policy
  ansible.builtin.iptables:
    chain: OUTPUT
    policy: ACCEPT

- name: masquerade nat eth0
  ansible.builtin.iptables:
    table: nat
    chain: POSTROUTING
    out_interface: eth0
    jump: MASQUERADE
    action: insert
    rule_num: 1

- name: restart docker service
  ansible.builtin.systemd_service:
    name: docker
    state: restarted
    enabled: true

- name: netfilter-persistent save
  ansible.builtin.raw: netfilter-persistent save
